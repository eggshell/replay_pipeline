---
- name: Ensure execution policy
  raw: powershell.exe Set-ExecutionPolicy Unrestricted

- name: Ensure PowerShell>=3
  script: upgrade_to_ps3.ps1

- name: Check for StarCraft II installation
  raw: 'Get-ItemProperty {{ starcraft_registry_path }} | select DisplayName | sls {{ starcraft_display_name }}'
  register: starcraft_installed
  failed_when: 'starcraft_display_name not in starcraft_installed.stdout'

- name: Check for Python2.7 installation
  raw: 'Get-ItemProperty {{ python_registry_path }} | select DisplayName | sls Python'
  register: python_installed

- name: Fetch Python2.7 installer
  win_get_url:
    url: "https://www.python.org/ftp/python/2.7.13/python-2.7.13.amd64.msi"
    dest: '{{ downloads_dir }}\python-2.7.13.amd64.msi'
  when: 'python_display_name not in python_installed.stdout'

- name: Install Python2.7
  raw: 'powershell.exe Start-Process {{ downloads_dir }}\python-2.7.13.amd64.msi /qn -Wait'
  when: 'python_display_name not in python_installed.stdout'

# TODO: rethink conditional on next three tasks
- name: Fetch get-pip.py
  win_get_url:
    url: "https://bootstrap.pypa.io/get-pip.py"
    dest: '{{ downloads_dir }}\get-pip.py'
  when: 'python_display_name not in python_installed.stdout'

- name: Run get-pip.py
  raw: 'python {{ downloads_dir }}\get-pip.py'
  when: 'python_display_name not in python_installed.stdout'

- name: Ensure pip packages
  raw: 'pip install pbr python-keystoneclient python-swiftclient'
  when: 'python_display_name not in python_installed.stdout'

- name: Ensure scripts directory
  win_file:
    path: "{{ scripts_dir }}"
    state: directory

- name: Ensure openrc file
  win_template:
    src: openrc.sh
    dest: '{{ scripts_dir }}\openrc.sh'

- name: Ensure openrc interpreter
  win_template:
    src: source-openrc.ps1
    dest: '{{ scripts_dir }}\source-openrc.ps1'

- name: Source openstack environment variables
  raw: 'powershell.exe {{ scripts_dir }}\source-openrc.ps1 {{ scripts_dir }}\openrc.sh'

- name: Ensure watch script
  win_template:
    src: watch_for_replays.ps1
    dest: '{{ scripts_dir }}\watch_for_replays.ps1'

- name: Start watching for SC2Replay files
  raw: 'powershell.exe -File {{ scripts_dir }}\watch_for_replays.ps1 -WindowStyle Hidden'
