---
- name: Ensure venv directory
  file:
    path: /opt/venvs
    state: directory

- name: Ensure apt packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - python3-pip
    - jq

- name: Ensure virtualenv
  pip:
    name: virtualenv
    state: present

- name: Ensure pip packages
  pip:
    name: "{{ item }}"
    state: present
    virtualenv: /opt/venvs/replays
    virtualenv_python: python3.5
  with_items:
    - python-keystoneclient
    - python-swiftclient
    - git+git://github.com/nibalizer/replay_processing.git#egg=replay_processing

# TODO: Think about adding a conditional here to speed up subsequent runs
- name: Ensure nibalizer/replay_processing requirements
  shell: "pip install -r /opt/venvs/replays/src/replay-processing/requirements.txt"

- name: Ensure directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/replays/scripts
    - /opt/replays/starcraft_replays

- name: Ensure scripts
  template:
    src: "opt/replays/scripts/{{ item }}"
    dest: "/opt/replays/scripts/{{ item }}"
    mode: 0700
  with_items:
    - openrc.sh
    - pull-replays.sh
    - process-replays.sh
    - push-replay-data.sh

- name: Ensure replay pull cron job
  cron:
    name: "Pull replay files from object store"
    job: "/opt/replays/scripts/pull-replays.sh"

- name: Ensure replay processing cron job
  cron:
    name: "Process replays locally"
    job: "/opt/replays/scripts/process-replays.sh"

- name: Ensure replay push cron job
  cron:
    name: "Push replays to watson analytics"
    job: "/opt/replays/scripts/push-replays.sh"
